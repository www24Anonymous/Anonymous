digraph "CFG for all program" {
 compound = true;
subgraph cluster_main{
label = main;
labelloc = t;
labeljust = c;
subgraph cluster_BB0{
label = BB0;
labelloc = t;
labeljust = c;
"main  %3 = alloca i32, align 4" -> "main  store i32 0, i32* %3, align 4";
"main  %4 = alloca i32, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  %5 = alloca i8**, align 8" -> "main  store i8** %1, i8*** %5, align 8";
"main  %6 = alloca i32, align 4" -> "main  store i32 30, i32* %6, align 4";
"main  %6 = alloca i32, align 4" -> "main  %9 = load i32, i32* %6, align 4";
"main  %9 = load i32, i32* %6, align 4" -> "main  %10 = zext i32 %9 to i64";
"llvm.stacksave" -> "main  %11 = call i8* @llvm.stacksave()";
"llvm.stacksave" [ color = red ];
"main  %11 = call i8* @llvm.stacksave()" -> "main  store i8* %11, i8** %7, align 8";
"main  %7 = alloca i8*, align 8" -> "main  store i8* %11, i8** %7, align 8";
"main  %10 = zext i32 %9 to i64" -> "main  %12 = alloca i32, i64 %10, align 16";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %13 = getelementptr inbounds i32, i32* %12, i64 0";
"main  %13 = getelementptr inbounds i32, i32* %12, i64 0" -> "main  store i32 1, i32* %13, align 16";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %14 = getelementptr inbounds i32, i32* %12, i64 1";
"main  %14 = getelementptr inbounds i32, i32* %12, i64 1" -> "main  store i32 1, i32* %14, align 4";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %15 = getelementptr inbounds i32, i32* %12, i64 0";
"main  %15 = getelementptr inbounds i32, i32* %12, i64 0" -> "main  %16 = load i32, i32* %15, align 16";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %17 = getelementptr inbounds i32, i32* %12, i64 1";
"main  %17 = getelementptr inbounds i32, i32* %12, i64 1" -> "main  %18 = load i32, i32* %17, align 4";
"main  %16 = load i32, i32* %15, align 16" -> "main  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %18)";
"main  %18 = load i32, i32* %17, align 4" -> "main  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %18)";
"printf" -> "main  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %18)";
"printf" [ color = red ];
"main  %8 = alloca i32, align 4" -> "main  store i32 2, i32* %8, align 4";
edge[color = red];
"main  %3 = alloca i32, align 4" -> "main  %4 = alloca i32, align 4";
"main  %4 = alloca i32, align 4" -> "main  %5 = alloca i8**, align 8";
"main  %5 = alloca i8**, align 8" -> "main  %6 = alloca i32, align 4";
"main  %6 = alloca i32, align 4" -> "main  %7 = alloca i8*, align 8";
"main  %7 = alloca i8*, align 8" -> "main  %8 = alloca i32, align 4";
"main  %8 = alloca i32, align 4" -> "main  store i32 0, i32* %3, align 4";
"main  store i32 0, i32* %3, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  store i32 %0, i32* %4, align 4" -> "main  store i8** %1, i8*** %5, align 8";
"main  store i8** %1, i8*** %5, align 8" -> "main  store i32 30, i32* %6, align 4";
"main  store i32 30, i32* %6, align 4" -> "main  %9 = load i32, i32* %6, align 4";
"main  %9 = load i32, i32* %6, align 4" -> "main  %10 = zext i32 %9 to i64";
"main  %10 = zext i32 %9 to i64" -> "main  %11 = call i8* @llvm.stacksave()";
"main  %11 = call i8* @llvm.stacksave()" -> "main  store i8* %11, i8** %7, align 8";
"main  store i8* %11, i8** %7, align 8" -> "main  %12 = alloca i32, i64 %10, align 16";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %13 = getelementptr inbounds i32, i32* %12, i64 0";
"main  %13 = getelementptr inbounds i32, i32* %12, i64 0" -> "main  store i32 1, i32* %13, align 16";
"main  store i32 1, i32* %13, align 16" -> "main  %14 = getelementptr inbounds i32, i32* %12, i64 1";
"main  %14 = getelementptr inbounds i32, i32* %12, i64 1" -> "main  store i32 1, i32* %14, align 4";
"main  store i32 1, i32* %14, align 4" -> "main  %15 = getelementptr inbounds i32, i32* %12, i64 0";
"main  %15 = getelementptr inbounds i32, i32* %12, i64 0" -> "main  %16 = load i32, i32* %15, align 16";
"main  %16 = load i32, i32* %15, align 16" -> "main  %17 = getelementptr inbounds i32, i32* %12, i64 1";
"main  %17 = getelementptr inbounds i32, i32* %12, i64 1" -> "main  %18 = load i32, i32* %17, align 4";
"main  %18 = load i32, i32* %17, align 4" -> "main  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %18)";
"main  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %18)" -> "main  store i32 2, i32* %8, align 4";
"main  store i32 2, i32* %8, align 4" -> "main0  br label %20";
};
subgraph cluster_BB1{
label = BB1;
labelloc = t;
labeljust = c;
"main  %8 = alloca i32, align 4" -> "main  %21 = load i32, i32* %8, align 4";
"main  %6 = alloca i32, align 4" -> "main  %22 = load i32, i32* %6, align 4";
"main  %21 = load i32, i32* %8, align 4" -> "main  %23 = icmp slt i32 %21, %22";
"main  %22 = load i32, i32* %6, align 4" -> "main  %23 = icmp slt i32 %21, %22";
"main  %23 = icmp slt i32 %21, %22" -> "main1  br i1 %23, label %24, label %47";
edge[color = red];
"main  %21 = load i32, i32* %8, align 4" -> "main  %22 = load i32, i32* %6, align 4";
"main  %22 = load i32, i32* %6, align 4" -> "main  %23 = icmp slt i32 %21, %22";
"main  %23 = icmp slt i32 %21, %22" -> "main1  br i1 %23, label %24, label %47";
};
subgraph cluster_BB2{
label = BB2;
labelloc = t;
labeljust = c;
"main  %8 = alloca i32, align 4" -> "main  %25 = load i32, i32* %8, align 4";
"main  %25 = load i32, i32* %8, align 4" -> "main  %26 = sub nsw i32 %25, 2";
"main  %26 = sub nsw i32 %25, 2" -> "main  %27 = sext i32 %26 to i64";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %28 = getelementptr inbounds i32, i32* %12, i64 %27";
"main  %27 = sext i32 %26 to i64" -> "main  %28 = getelementptr inbounds i32, i32* %12, i64 %27";
"main  %28 = getelementptr inbounds i32, i32* %12, i64 %27" -> "main  %29 = load i32, i32* %28, align 4";
"main  %8 = alloca i32, align 4" -> "main  %30 = load i32, i32* %8, align 4";
"main  %30 = load i32, i32* %8, align 4" -> "main  %31 = sub nsw i32 %30, 1";
"main  %31 = sub nsw i32 %30, 1" -> "main  %32 = sext i32 %31 to i64";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %33 = getelementptr inbounds i32, i32* %12, i64 %32";
"main  %32 = sext i32 %31 to i64" -> "main  %33 = getelementptr inbounds i32, i32* %12, i64 %32";
"main  %33 = getelementptr inbounds i32, i32* %12, i64 %32" -> "main  %34 = load i32, i32* %33, align 4";
"main  %29 = load i32, i32* %28, align 4" -> "main  %35 = add nsw i32 %29, %34";
"main  %34 = load i32, i32* %33, align 4" -> "main  %35 = add nsw i32 %29, %34";
"main  %8 = alloca i32, align 4" -> "main  %36 = load i32, i32* %8, align 4";
"main  %36 = load i32, i32* %8, align 4" -> "main  %37 = sext i32 %36 to i64";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %38 = getelementptr inbounds i32, i32* %12, i64 %37";
"main  %37 = sext i32 %36 to i64" -> "main  %38 = getelementptr inbounds i32, i32* %12, i64 %37";
"main  %35 = add nsw i32 %29, %34" -> "main  store i32 %35, i32* %38, align 4";
"main  %38 = getelementptr inbounds i32, i32* %12, i64 %37" -> "main  store i32 %35, i32* %38, align 4";
"main  %8 = alloca i32, align 4" -> "main  %39 = load i32, i32* %8, align 4";
"main  %39 = load i32, i32* %8, align 4" -> "main  %40 = sext i32 %39 to i64";
"main  %12 = alloca i32, i64 %10, align 16" -> "main  %41 = getelementptr inbounds i32, i32* %12, i64 %40";
"main  %40 = sext i32 %39 to i64" -> "main  %41 = getelementptr inbounds i32, i32* %12, i64 %40";
"main  %41 = getelementptr inbounds i32, i32* %12, i64 %40" -> "main  %42 = load i32, i32* %41, align 4";
"main  %42 = load i32, i32* %41, align 4" -> "main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %42)";
"printf" -> "main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %42)";
"printf" [ color = red ];
edge[color = red];
"main  %25 = load i32, i32* %8, align 4" -> "main  %26 = sub nsw i32 %25, 2";
"main  %26 = sub nsw i32 %25, 2" -> "main  %27 = sext i32 %26 to i64";
"main  %27 = sext i32 %26 to i64" -> "main  %28 = getelementptr inbounds i32, i32* %12, i64 %27";
"main  %28 = getelementptr inbounds i32, i32* %12, i64 %27" -> "main  %29 = load i32, i32* %28, align 4";
"main  %29 = load i32, i32* %28, align 4" -> "main  %30 = load i32, i32* %8, align 4";
"main  %30 = load i32, i32* %8, align 4" -> "main  %31 = sub nsw i32 %30, 1";
"main  %31 = sub nsw i32 %30, 1" -> "main  %32 = sext i32 %31 to i64";
"main  %32 = sext i32 %31 to i64" -> "main  %33 = getelementptr inbounds i32, i32* %12, i64 %32";
"main  %33 = getelementptr inbounds i32, i32* %12, i64 %32" -> "main  %34 = load i32, i32* %33, align 4";
"main  %34 = load i32, i32* %33, align 4" -> "main  %35 = add nsw i32 %29, %34";
"main  %35 = add nsw i32 %29, %34" -> "main  %36 = load i32, i32* %8, align 4";
"main  %36 = load i32, i32* %8, align 4" -> "main  %37 = sext i32 %36 to i64";
"main  %37 = sext i32 %36 to i64" -> "main  %38 = getelementptr inbounds i32, i32* %12, i64 %37";
"main  %38 = getelementptr inbounds i32, i32* %12, i64 %37" -> "main  store i32 %35, i32* %38, align 4";
"main  store i32 %35, i32* %38, align 4" -> "main  %39 = load i32, i32* %8, align 4";
"main  %39 = load i32, i32* %8, align 4" -> "main  %40 = sext i32 %39 to i64";
"main  %40 = sext i32 %39 to i64" -> "main  %41 = getelementptr inbounds i32, i32* %12, i64 %40";
"main  %41 = getelementptr inbounds i32, i32* %12, i64 %40" -> "main  %42 = load i32, i32* %41, align 4";
"main  %42 = load i32, i32* %41, align 4" -> "main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %42)";
"main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %42)" -> "main2  br label %44";
};
subgraph cluster_BB4{
label = BB4;
labelloc = t;
labeljust = c;
"main  %8 = alloca i32, align 4" -> "main  %45 = load i32, i32* %8, align 4";
"main  %45 = load i32, i32* %8, align 4" -> "main  %46 = add nsw i32 %45, 1";
"main  %46 = add nsw i32 %45, 1" -> "main  store i32 %46, i32* %8, align 4";
"main  %8 = alloca i32, align 4" -> "main  store i32 %46, i32* %8, align 4";
edge[color = red];
"main  %45 = load i32, i32* %8, align 4" -> "main  %46 = add nsw i32 %45, 1";
"main  %46 = add nsw i32 %45, 1" -> "main  store i32 %46, i32* %8, align 4";
"main  store i32 %46, i32* %8, align 4" -> "main4  br label %20";
};
subgraph cluster_BB3{
label = BB3;
labelloc = t;
labeljust = c;
"main  %7 = alloca i8*, align 8" -> "main  %48 = load i8*, i8** %7, align 8";
"main  %48 = load i8*, i8** %7, align 8" -> "main  call void @llvm.stackrestore(i8* %48)";
"llvm.stackrestore" -> "main  call void @llvm.stackrestore(i8* %48)";
"llvm.stackrestore" [ color = red ];
"main  %3 = alloca i32, align 4" -> "main  %49 = load i32, i32* %3, align 4";
"main  %49 = load i32, i32* %3, align 4" -> "main  ret i32 %49";
edge[color = red];
"main  %48 = load i8*, i8** %7, align 8" -> "main  call void @llvm.stackrestore(i8* %48)";
"main  call void @llvm.stackrestore(i8* %48)" -> "main  %49 = load i32, i32* %3, align 4";
"main  %49 = load i32, i32* %3, align 4" -> "main  ret i32 %49";
};
};
edge[ color = blue ];
"main0  br label %20"-> "main  %21 = load i32, i32* %8, align 4"[ltail = cluster_BB0 lhead = cluster_BB1];
"main1  br i1 %23, label %24, label %47"-> "main  %25 = load i32, i32* %8, align 4"[ltail = cluster_BB1 lhead = cluster_BB2];
"main1  br i1 %23, label %24, label %47"-> "main  %48 = load i8*, i8** %7, align 8"[ltail = cluster_BB1 lhead = cluster_BB3];
"main2  br label %44"-> "main  %45 = load i32, i32* %8, align 4"[ltail = cluster_BB2 lhead = cluster_BB4];
"main4  br label %20"-> "main  %21 = load i32, i32* %8, align 4"[ltail = cluster_BB4 lhead = cluster_BB1];
edge[ color = green ];
}
