0$bitstring  %5 = alloca i8*, align 8
1$bitstring  %6 = alloca i64, align 8
2$bitstring  %7 = alloca i32, align 4
3$bitstring  %8 = alloca i32, align 4
4$bitstring  %9 = alloca i32, align 4
5$bitstring  %10 = alloca i32, align 4
6$bitstring  store i8* %0, i8** %5, align 8
7$bitstring  store i64 %1, i64* %6, align 8
8$bitstring  store i32 %2, i32* %7, align 4
9$bitstring  store i32 %3, i32* %8, align 4
10$bitstring  %11 = load i32, i32* %8, align 4
11$bitstring  %12 = load i32, i32* %7, align 4
12$bitstring  %13 = load i32, i32* %7, align 4
13$bitstring  %14 = ashr i32 %13, 2
14$bitstring  %15 = add nsw i32 %12, %14
15$bitstring  %16 = load i32, i32* %7, align 4
16$bitstring  %17 = srem i32 %16, 4
17$bitstring  %18 = icmp ne i32 %17, 0
18$bitstring  %19 = select i1 %18, i32 0, i32 1
19$bitstring  %20 = sub nsw i32 %15, %19
20$bitstring  %21 = sub nsw i32 %11, %20
21$bitstring  store i32 %21, i32* %10, align 4
22$bitstring  store i32 0, i32* %9, align 4
23$bitstring0  br label %22
24$bitstring  %23 = load i32, i32* %9, align 4
25$bitstring  %24 = load i32, i32* %10, align 4
26$bitstring  %25 = icmp slt i32 %23, %24
27$bitstring1  br i1 %25, label %26, label %32
28$bitstring  %27 = load i8*, i8** %5, align 8
29$bitstring  %28 = getelementptr inbounds i8, i8* %27, i32 1
30$bitstring  store i8* %28, i8** %5, align 8
31$bitstring  store i8 32, i8* %27, align 1
32$bitstring2  br label %29
33$bitstring  %30 = load i32, i32* %9, align 4
34$bitstring  %31 = add nsw i32 %30, 1
35$bitstring  store i32 %31, i32* %9, align 4
36$bitstring4  br label %22
37$bitstring3  br label %33
38$bitstring  %34 = load i32, i32* %7, align 4
39$bitstring  %35 = add nsw i32 %34, -1
40$bitstring  store i32 %35, i32* %7, align 4
41$bitstring  %36 = icmp sge i32 %35, 0
42$bitstring5  br i1 %36, label %37, label %57
43$bitstring  %38 = load i64, i64* %6, align 8
44$bitstring  %39 = load i32, i32* %7, align 4
45$bitstring  %40 = zext i32 %39 to i64
46$bitstring  %41 = ashr i64 %38, %40
47$bitstring  %42 = and i64 %41, 1
48$bitstring  %43 = add nsw i64 %42, 48
49$bitstring  %44 = trunc i64 %43 to i8
50$bitstring  %45 = load i8*, i8** %5, align 8
51$bitstring  %46 = getelementptr inbounds i8, i8* %45, i32 1
52$bitstring  store i8* %46, i8** %5, align 8
53$bitstring  store i8 %44, i8* %45, align 1
54$bitstring  %47 = load i32, i32* %7, align 4
55$bitstring  %48 = srem i32 %47, 4
56$bitstring  %49 = icmp ne i32 %48, 0
57$bitstring6  br i1 %49, label %56, label %50
58$bitstring  %51 = load i32, i32* %7, align 4
59$bitstring  %52 = icmp ne i32 %51, 0
60$bitstring9  br i1 %52, label %53, label %56
61$bitstring  %54 = load i8*, i8** %5, align 8
62$bitstring  %55 = getelementptr inbounds i8, i8* %54, i32 1
63$bitstring  store i8* %55, i8** %5, align 8
64$bitstring  store i8 32, i8* %54, align 1
65$bitstring10  br label %56
66$bitstring8  br label %33
67$bitstring  %58 = load i8*, i8** %5, align 8
68$bitstring  store i8 0, i8* %58, align 1
69$bitstring  ret void
70$main  %1 = alloca i32, align 4
71$main  %2 = alloca [80 x i8], align 16
72$main  %3 = alloca i64, align 8
73$main  store i32 0, i32* %1, align 4
74$main  store i64 1, i64* %3, align 8
75$main11  br label %4
76$main  %5 = load i64, i64* %3, align 8
77$main  %6 = icmp sle i64 %5, 16
78$main12  br i1 %6, label %7, label %18
79$main  %8 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0
80$main  %9 = load i64, i64* %3, align 8
81$main  %10 = load i64, i64* %3, align 8
82$main  %11 = trunc i64 %10 to i32
83$main  call void @bitstring(i8* %8, i64 %9, i32 %11, i32 16)
84$main  %12 = load i64, i64* %3, align 8
85$main  %13 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0
86$main  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i64 %12, i8* %13)
87$main13  br label %15
88$main  %16 = load i64, i64* %3, align 8
89$main  %17 = add nsw i64 %16, 1
90$main  store i64 %17, i64* %3, align 8
91$main15  br label %4
92$main  ret i32 0
